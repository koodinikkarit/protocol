syntax = "proto3";

package SeppoService;

import "song_database.proto";
import "ew_database.proto";
import "ew_song.proto";
import "tag.proto";
import "language.proto";
import "schedule.proto";
import "variation_version.proto";
import "log.proto";
import "variation.proto";
import "author.proto";
import "copyright.proto";
import "matias_client.proto";


service Seppo {
	// Queries
	
	rpc fetchVariationById(FetchVariationByIdRequest) returns(FetchVariationByIdResponse) {}
	rpc searchVariations(SearchVariationsRequest) returns(SearchVariationsResponse) {}

	rpc fetchNewestVariationVersionByVariationId(FetchNewestVariationVersionByVariationIdRequest) returns(FetchNewestVariationVersionByVariationIdResponse) {}
	rpc fetchVariationVersionById(FetchVariationVersionByIdRequest) returns(FetchVariationVersionByIdResponse) {}

	rpc searchSongDatabases(SearchSongDatabasesRequest) returns (SearchSongDatabasesResponse) {}
	rpc fetchSongDatabaseById(FetchSongDatabaseByIdRequest) returns(FetchSongDatabaseByIdResponse) {}

	rpc searchEwDatabases(SearchEwDatabasesRequest) returns(SearchEwDatabasesResponse) {}
	rpc fetchEwDatabaseById(FetchEwDatabaseByIdRequest) returns(FetchEwDatabaseByIdResponse) {}

	rpc searchTags(SearchTagsRequest) returns(SearchTagsResponse) {}
	rpc fetchTagById(FetchTagByIdRequest) returns(FetchTagByIdResponse) {}

	rpc searchLanguages(SearchLanguagesRequest) returns(SearchLanguagesResponse) {}
	rpc fetchLanguageById(FetchLanguageByIdRequest) returns(FetchLanguageByIdResponse) {}

	rpc searchSchedules(SearchSchedulesRequest) returns(SearchSchedulesResponse) {}
	rpc fetchScheduleById(FetchScheduleByIdRequest) returns(FetchScheduleByIdResponse) {}

	rpc searchAuthors(SearchAuthorsRequest) returns(SearchAuthorsResponse) {}
	rpc fetchAuthorById(FetchAuthorByIdRequest) returns(FetchAuthorByIdResponse) {}

	rpc searchCopyrights(SearchCopyrightsRequest) returns(SearchCopyrightsResponse) {}
	rpc fetchCopyrightById(FetchCopyrightByIdRequest) returns(FetchCopyrightByIdResponse) {}

	rpc searchMatiasClients(SearchMatiasClientsRequest) returns(SearchMatiasClientsResponse) {}
	rpc fetchMatiasClient(FetchMatiasClientRequest) returns(FetchMatiasClientResponse) {}
	rpc fetchMatiasClientEwDatabases(FetchMatiasClientEwDatabasesRequest) returns(FetchMatiasClientEwDatabasesResponse) {}

	rpc searchLogs(SearchLogsRequest) returns(SearchLogsResponse) {}

	// Mutations

	rpc createVariation(CreateVariationRequest) returns(CreateVariationResponse) {}
	rpc updateVariation(UpdateVariationRequest) returns(UpdateVariationResponse) {}
	rpc removeVariation(RemoveVariationRequest) returns(RemoveVariationResponse) {}

	rpc createSongDatabase(CreateSongDatabaseRequest) returns(CreateSongDatabaseResponse) {}
	rpc updateSongDatabase(UpdateSongDatabaseRequest) returns(UpdateSongDatabaseResponse) {}
	rpc removeSongDatabase(RemoveSongDatabaseRequest) returns(RemoveSongDatabaseResponse) {}

	rpc createEwDatabase(CreateEwDatabaseRequest) returns(CreateEwDatabaseResponse) {}
	rpc updateEwDatabase(UpdateEwDatabaseRequest) returns(UpdateEwDatabaseResponse) {}
	rpc removeEwDatabase(RemoveEwDatabaseRequest) returns(RemoveEwDatabaseResponse) {}

	rpc createTag(CreateTagRequest) returns(CreateTagResponse) {}
	rpc updateTag(UpdateTagRequest) returns(UpdateTagResponse) {}
	rpc removeTag(RemoveTagRequest) returns(RemoveTagResponse) {}

	rpc createLanguage(CreateLanguageRequest) returns(CreateLanguageResponse) {}
	rpc updateLanguage(UpdateLanguageRequest) returns(UpdateLanguageResponse) {}
	rpc removeLanguage(RemoveLanguageRequest) returns(RemoveLanguageResponse) {}

	rpc createSchedule(CreateScheduleRequest) returns(CreateScheduleResponse) {}
	rpc updateSchedule(UpdateScheduleRequest) returns(UpdateScheduleResponse) {}
	rpc removeSchedule(RemoveScheduleRequest) returns(RemoveScheduleResponse) {}

	rpc createAuthor(CreateAuthorRequest) returns(CreateAuthorResponse) {}
	rpc updateAuthor(UpdateAuthorRequest) returns(UpdateAuthorResponse) {}
	rpc removeAuthor(RemoveAuthorRequest) returns(RemoveAuthorResponse) {}

	rpc createCopyright(CreateCopyrightRequest) returns(CreateCopyrightResponse) {}
	rpc updateCopyright(UpdateCopyrightRequest) returns(UpdateCopyrightResponse) {}
	rpc removeCopyright(RemoveCopyrightRequest) returns(RemoveCopyrightResponse) {}

	rpc updateMatiasClient(UpdateMatiasClientRequest) returns(UpdateMatiasClientResponse) {}
}